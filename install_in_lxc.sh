#!/bin/bash
#
# MikroTik Backup Manager - In-LXC Installer
#
set -e

# Funkcie pre farebn√Ω v√Ωstup
function msg_info() { echo -e "\\033[1;34mINFO\\033[0m: $1"; }
function msg_ok() { echo -e "\\033[1;32mSUCCESS\\033[0m: $1"; }

# Premenn√©
REPO_URL="https://github.com/spekulanter/mikrotik-manager.git"
APP_DIR="/opt/mikrotik-manager"
DATA_DIR="/var/lib/mikrotik-manager"

# Aktualiz√°cia syst√©mu a in≈°tal√°cia z√°vislost√≠
msg_info "Aktualizujem syst√©m a in≈°talujem potrebn√© bal√≠ƒçky..."
apt-get update &>/dev/null
apt-get install -y git python3-pip python3-venv &>/dev/null
msg_ok "Syst√©mov√© z√°vislosti s√∫ nain≈°talovan√©."

# Vytvorenie adres√°rov
msg_info "Vytv√°ram adres√°re aplik√°cie a pre d√°ta..."
mkdir -p ${APP_DIR}
mkdir -p ${DATA_DIR}/data/backups
chown -R root:root ${APP_DIR}
chown -R root:root ${DATA_DIR}
msg_ok "Adres√°re s√∫ pripraven√©."

# Klonovanie repozit√°ra
msg_info "S≈•ahujem aplik√°ciu z ${REPO_URL}..."
git clone ${REPO_URL} ${APP_DIR} &>/dev/null
msg_ok "Aplik√°cia stiahnut√°."

# Vytvorenie Python Virtual Environment
msg_info "Vytv√°ram izolovan√© Python prostredie (venv)..."
python3 -m venv ${APP_DIR}/venv
msg_ok "Virtual environment vytvoren√©."

# In≈°tal√°cia Python kni≈æn√≠c
msg_info "In≈°talujem potrebn√© Python kni≈ænice..."
source ${APP_DIR}/venv/bin/activate
pip install -r ${APP_DIR}/requirements.txt &>/dev/null
deactivate
msg_ok "Kni≈ænice nain≈°talovan√©."

# Vytvorenie a nastavenie systemd slu≈æby
SERVICE_FILE="/etc/systemd/system/mbm.service"
msg_info "Vytv√°ram systemd slu≈æbu pre automatick√© sp√∫≈°≈•anie..."
cat << EOF > ${SERVICE_FILE}
[Unit]
Description=MikroTik Backup Manager
After=network.target

[Service]
Type=simple
User=root
Group=root
WorkingDirectory=${APP_DIR}
ExecStart=${APP_DIR}/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:5000 "app:app"
Restart=always
RestartSec=10
Environment="DATA_DIR=${DATA_DIR}/data"

[Install]
WantedBy=multi-user.target
EOF
msg_ok "S√∫bor pre slu≈æbu vytvoren√Ω."

# Vytvorenie nov√©ho update skriptu
UPDATE_SCRIPT_PATH="${APP_DIR}/update.sh"
msg_info "Vytv√°ram nov√Ω aktualizaƒçn√Ω skript..."
cat << 'EOF' > ${UPDATE_SCRIPT_PATH}
#!/bin/bash
set -e
echo "üîÑ Aktualizujem MikroTik Backup Manager..."
systemctl stop mbm.service
cd /opt/mikrotik-manager
git pull origin main
source venv/bin/activate
pip install -r requirements.txt
deactivate
systemctl start mbm.service
echo "‚úÖ Aplik√°cia bola √∫spe≈°ne aktualizovan√°."
EOF
chmod +x ${UPDATE_SCRIPT_PATH}
msg_ok "Nov√Ω update.sh vytvoren√Ω."

# Povolenie a spustenie slu≈æby
msg_info "Povoƒæujem a sp√∫≈°≈•am slu≈æbu MikroTik Backup Manager..."
systemctl daemon-reload
systemctl enable --now mbm.service &>/dev/null
msg_ok "Slu≈æba mbm.service je akt√≠vna a be≈æ√≠."

echo -e "\\n\\nüéâ In≈°tal√°cia v LXC dokonƒçen√°! üéâ"