<!DOCTYPE html>
<html lang="sk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta http-equiv="Content-Security-Policy" content="default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'">
    <title>MikroTik Manager</title>
    
    <!-- Cordova Script -->
    <script type="text/javascript" src="cordova.js"></script>
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #1e3a8a, #3b82f6);
            height: 100vh;
            overflow: hidden;
        }
        
        .setup-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            padding: 20px;
            text-align: center;
        }
        
        .app-icon {
            width: 120px;
            height: 120px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            backdrop-filter: blur(10px);
        }
        
        .app-icon svg {
            width: 60px;
            height: 60px;
            color: white;
        }
        
        h1 {
            color: white;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 10px;
        }
        
        .subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 16px;
            margin-bottom: 40px;
        }
        
        .setup-form {
            background: rgba(255, 255, 255, 0.95);
            padding: 30px;
            border-radius: 20px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(20px);
        }
        
        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #374151;
            font-size: 14px;
        }
        
        input {
            width: 100%;
            padding: 14px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: white;
        }
        
        input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .btn {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #3b82f6, #1e40af);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 10px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(59, 130, 246, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        
        .webview-container {
            display: none;
            height: 100vh;
            width: 100vw;
        }
        
        .webview-frame {
            width: 100%;
            height: 100%;
            border: none;
            background: white;
        }
        
        .loading {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            z-index: 9999;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        
        .spinner {
            width: 50px;
            height: 50px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .loading-text {
            color: white;
            font-size: 16px;
            font-weight: 500;
        }
        
        .error-message {
            background: #fef2f2;
            color: #dc2626;
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
            display: none;
        }
        
        .back-btn {
            position: fixed;
            top: 20px;
            left: 20px;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 25px;
            font-size: 20px;
            cursor: pointer;
            z-index: 1000;
            display: none;
            align-items: center;
            justify-content: center;
        }
        
        .example-urls {
            background: rgba(59, 130, 246, 0.1);
            border: 1px solid rgba(59, 130, 246, 0.3);
            border-radius: 8px;
            padding: 12px;
            margin-top: 10px;
            text-align: left;
        }
        
        .example-urls .label {
            font-size: 12px;
            font-weight: 600;
            color: #1e40af;
            margin-bottom: 5px;
        }
        
        .example-urls .url {
            font-size: 12px;
            color: #374151;
            font-family: monospace;
            margin-bottom: 2px;
        }
    </style>
</head>
<body>
    <!-- Loading Screen -->
    <div id="loading" class="loading">
        <div class="spinner"></div>
        <div class="loading-text">Pripájam sa...</div>
    </div>
    
    <!-- Back Button -->
    <button id="backBtn" class="back-btn">←</button>
    
    <!-- Setup Screen -->
    <div id="setupScreen" class="setup-container">
        <div class="app-icon">
            <svg viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"/>
            </svg>
        </div>
        
        <h1>MikroTik Manager</h1>
        <p class="subtitle">Mobilná aplikácia pre správu MikroTik zariadení</p>
        
        <div class="setup-form">
            <div class="error-message" id="errorMessage"></div>
            
            <div class="form-group">
                <label for="serverUrl">URL adresa servera</label>
                <input 
                    type="url" 
                    id="serverUrl" 
                    placeholder="https://your-server.com:5000"
                    value=""
                    autocomplete="off"
                    autocorrect="off"
                    spellcheck="false"
                />
                
                <div class="example-urls">
                    <div class="label">Príklady:</div>
                    <div class="url">https://mikrotik.example.com</div>
                    <div class="url">http://192.168.1.100:5000</div>
                    <div class="url">https://your-domain.com:5000</div>
                </div>
            </div>
            
            <button class="btn" onclick="connectToServer()">
                Pripojiť
            </button>
        </div>
    </div>
    
    <!-- WebView Screen -->
    <div id="webviewScreen" class="webview-container">
        <iframe id="webviewFrame" class="webview-frame" src="about:blank"></iframe>
    </div>

    <script>
        let currentServerUrl = '';
        
        // Initialize app when device is ready
        document.addEventListener('deviceready', onDeviceReady, false);
        
        function onDeviceReady() {
            console.log('Device is ready');
            
            // Load saved server URL
            const savedUrl = localStorage.getItem('mikrotik_server_url');
            if (savedUrl) {
                document.getElementById('serverUrl').value = savedUrl;
            }
            
            // Handle Android back button
            document.addEventListener("backbutton", onBackKeyDown, false);
            
            // Add back button listener
            document.getElementById('backBtn').addEventListener('click', goBack);
        }
        
        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }
        
        function hideError() {
            document.getElementById('errorMessage').style.display = 'none';
        }
        
        function showLoading() {
            document.getElementById('loading').style.display = 'flex';
        }
        
        function hideLoading() {
            document.getElementById('loading').style.display = 'none';
        }
        
        async function connectToServer() {
            const urlInput = document.getElementById('serverUrl');
            let url = urlInput.value.trim();
            
            if (!url) {
                showError('Prosím zadajte URL adresu servera');
                return;
            }
            
            // Add protocol if missing
            if (!url.startsWith('http://') && !url.startsWith('https://')) {
                url = 'https://' + url;
            }
            
            // Remove trailing slash
            url = url.replace(/\/$/, '');
            
            hideError();
            showLoading();
            
            try {
                // Test connection - just try to load the main page
                const testResponse = await fetch(url, {
                    method: 'GET',
                    mode: 'no-cors' // Allow cross-origin requests
                });
                
                // Since we're using no-cors, we can't check response status
                // Just proceed to load the webview
                localStorage.setItem('mikrotik_server_url', url);
                currentServerUrl = url;
                
                loadWebView(url);
                
            } catch (error) {
                // If fetch fails, still try to load the webview
                console.log('Fetch failed, trying direct load:', error);
                localStorage.setItem('mikrotik_server_url', url);
                currentServerUrl = url;
                loadWebView(url);
            }
        }
        
        function loadWebView(url) {
            const webviewFrame = document.getElementById('webviewFrame');
            const setupScreen = document.getElementById('setupScreen');
            const webviewScreen = document.getElementById('webviewScreen');
            const backBtn = document.getElementById('backBtn');
            
            // Set iframe source
            webviewFrame.src = url;
            
            // Handle iframe load
            webviewFrame.onload = function() {
                hideLoading();
                setupScreen.style.display = 'none';
                webviewScreen.style.display = 'block';
                backBtn.style.display = 'flex';
            };
            
            webviewFrame.onerror = function() {
                hideLoading();
                showError('Chyba pri načítaní aplikácie');
            };
            
            // Hide loading after 3 seconds even if onload doesn't fire
            setTimeout(() => {
                if (document.getElementById('loading').style.display === 'flex') {
                    hideLoading();
                    setupScreen.style.display = 'none';
                    webviewScreen.style.display = 'block';
                    backBtn.style.display = 'flex';
                }
            }, 3000);
        }
        
        function goBack() {
            const setupScreen = document.getElementById('setupScreen');
            const webviewScreen = document.getElementById('webviewScreen');
            const backBtn = document.getElementById('backBtn');
            
            setupScreen.style.display = 'flex';
            webviewScreen.style.display = 'none';
            backBtn.style.display = 'none';
            
            // Clear iframe
            document.getElementById('webviewFrame').src = 'about:blank';
        }
        
        function onBackKeyDown() {
            const webviewScreen = document.getElementById('webviewScreen');
            
            if (webviewScreen.style.display === 'block') {
                goBack();
            } else {
                // Exit app
                if (navigator.app && navigator.app.exitApp) {
                    navigator.app.exitApp();
                }
            }
        }
        
        // For testing in browser
        if (!window.cordova) {
            setTimeout(onDeviceReady, 100);
        }
    </script>
</body>
</html>
